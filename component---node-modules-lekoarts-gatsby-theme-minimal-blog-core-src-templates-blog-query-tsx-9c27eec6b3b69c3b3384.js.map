{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["Blog","posts","useSiteMetadata","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","h2","a","as","Link","variant","to","replaceSlashes","mt","BlogComponent","allPost","data","nodes","query","ItemTags","tags","Fragment","map","tag","i","key","slug","name","BlogListItem","post","showTags","mb","fontSize","color","date","Listing","className"],"mappings":"2NAuCeA,EAjBF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACPC,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAOC,GAAR,aACA,YAAC,IAAOC,EAAR,CAAUC,GAAIC,OAAMP,GAAI,CAAEQ,QAAS,mBAAqBC,GAAIC,YAAe,IAAIZ,EAAL,IAAiBD,IAA3F,kBAIF,YAAC,IAAD,CAASF,MAAOA,EAAOK,GAAI,CAAEW,GAAI,CAAC,EAAG,QCjC3C,sCAEeC,UCOA,YAAqB,IAC1BC,EAD0B,EAAlBC,KACRD,QAER,OAAO,kBAAC,EAAD,CAAMlB,MAAOkB,EAAQE,SDVfH,IAEFI,EAAQ,c,mIEyBNC,EAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTtB,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMqB,SAAP,KACGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAOjB,EAAR,CAAUC,GAAIC,OAAME,GAAIC,YAAe,IAAIZ,EAAL,IAAiBD,EAAjB,IAA6BwB,EAAIG,OACpEH,EAAII,YCeFC,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,YAAC,IAAOxB,EAAR,CAAUC,GAAIC,OAAME,GAAIkB,EAAKH,KAAMxB,GAAI,CAAE8B,SAAU,CAAC,EAAG,EAAG,GAAIC,MAAO,SAClEJ,EAAK5B,OAER,iBAAGC,GAAI,CAAE+B,MAAO,YAAapB,GAAI,EAAGN,EAAG,CAAE0B,MAAO,aAAeD,SAAU,CAAC,EAAG,EAAG,KAC9E,wBAAOH,EAAKK,MACXL,EAAKT,MAAQU,GACZ,YAAC,IAAMT,SAAP,WAEE,YAAC,EAAD,CAAUD,KAAMS,EAAKT,WCJhBe,IARC,SAAC,GAAD,IAAGtC,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,UAAV,IAAqBN,gBAArB,gBACd,uBAAS5B,GAAI,CAAE6B,GAAI,CAAC,EAAG,EAAG,IAAMK,UAAWA,GACxCvC,EAAMyB,KAAI,SAAAO,GAAI,OACb,YAAC,EAAD,CAAcJ,IAAKI,EAAKH,KAAMG,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-9c27eec6b3b69c3b3384.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport { Flex } from \"@theme-ui/components\"\r\nimport Layout from \"./layout\"\r\nimport Listing from \"./listing\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\nimport SEO from \"./seo\"\r\n\r\ntype PostsProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n}\r\n\r\nconst Blog = ({ posts }: PostsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\r\n        <Styled.h2>Blog</Styled.h2>\r\n        <Styled.a as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\r\n          View all tags\r\n        </Styled.a>\r\n      </Flex>\r\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import { graphql } from \"gatsby\"\r\nimport BlogComponent from \"../components/blog\"\r\n\r\nexport default BlogComponent\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allPost(sort: { fields: date, order: DESC }) {\r\n      nodes {\r\n        slug\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        tags {\r\n          name\r\n          slug\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Blog from \"../../../components/blog\"\r\n\r\ntype Props = {\r\n  data: {\r\n    allPost: any\r\n    [key: string]: string\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { allPost } = data\r\n\r\n  return <Blog posts={allPost.nodes} />\r\n}\r\n","import React from \"react\"\r\nimport { Styled } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\r\nimport replaceSlashes from \"../utils/replaceSlashes\"\r\n\r\ntype TagsProps = {\r\n  tags: {\r\n    name: string\r\n    slug: string\r\n  }[]\r\n}\r\n\r\nconst ItemTags = ({ tags }: TagsProps) => {\r\n  const { tagsPath, basePath } = useSiteMetadata()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {tags.map((tag, i) => (\r\n        <React.Fragment key={tag.slug}>\r\n          {!!i && `, `}\r\n          <Styled.a as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\r\n            {tag.name}\r\n          </Styled.a>\r\n        </React.Fragment>\r\n      ))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ItemTags\r\n","/** @jsx jsx */\r\nimport React from \"react\"\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { Box } from \"@theme-ui/components\"\r\nimport { Link } from \"gatsby\"\r\nimport ItemTags from \"./item-tags\"\r\n\r\ntype BlogListItemProps = {\r\n  post: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }\r\n  showTags?: boolean\r\n}\r\n\r\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\r\n  <Box mb={4}>\r\n    <Styled.a as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\r\n      {post.title}\r\n    </Styled.a>\r\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\r\n      <time>{post.date}</time>\r\n      {post.tags && showTags && (\r\n        <React.Fragment>\r\n          {` â€” `}\r\n          <ItemTags tags={post.tags} />\r\n        </React.Fragment>\r\n      )}\r\n    </p>\r\n  </Box>\r\n)\r\n\r\nexport default BlogListItem\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport BlogListItem from \"./blog-list-item\"\r\n\r\ntype ListingProps = {\r\n  posts: {\r\n    slug: string\r\n    title: string\r\n    date: string\r\n    tags?: {\r\n      name: string\r\n      slug: string\r\n    }[]\r\n  }[]\r\n  className?: string\r\n  showTags?: boolean\r\n}\r\n\r\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\r\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\r\n    {posts.map(post => (\r\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\r\n    ))}\r\n  </section>\r\n)\r\n\r\nexport default Listing\r\n"],"sourceRoot":""}